#   mutate(
#     long = st_coordinates(.)[, "X"],
#     lat = st_coordinates(.)[, "Y"]
#   )%>% as.data.frame()
#
# #Drop last column (EF)
# PB_final <- PB_final[, -16]
#
#
# #Eagle Ford
# EF_final<- EF_final %>%st_transform(crs = 4326) %>%
#   mutate(
#     long = st_coordinates(.)[, "X"],
#     lat = st_coordinates(.)[, "Y"]
#   )%>% as.data.frame()
#
# #Drop last column  (EF)
# EF_final <- EF_final[, -21]
#
#
# #Filtering out temperatures
#
# PB_final <- PB_final %>% filter(temp_bb > 1600)
# EF_final <- EF_final %>% filter(temp_bb > 1600)
#
# #Selecting only columns of interest
# PB_final <- PB_final %>% dplyr::select(vnf_id, date, long, lat, zip, state, basin, county)
# EF_final <- EF_final %>% dplyr::select(vnf_id, date, county.y, zip, basin, long, lat, state.y)%>%rename(state = state.y, county = county.y)
#
# #Removing NA
# PB_final <- na.omit(PB_final)
# EF_final <- na.omit(EF_final)
#
#
# #Combining the Data
# Final_Data <- rbind(PB_final, EF_final)
#
# #Writing the file
# write_rds(EF_final, "EF_final.rds")
# write_rds(PB_final, "PB_final.rds")
# write_rds(Final_Data, "VNF_data_final_2012-2022.rds")
#
#------------------------------------------------------UPDATE------------------------------------#
#After receiving Jerry's Updated Data
Data_2016_2022 <- readRDS("../JerryData/flare_full.rds")
Data_2016_2022$long <- Data_2016_2022$vnf_lon
Data_2016_2022$lat <- Data_2016_2022$vnf_lat
Data_coord_2016_2022 <-  st_as_sf(Data_2016_2022, coords = c("long", "lat"), crs = 4326)
Data_join_2016_2022 <- st_join(Data_coord_2016_2022, Counties_Spatial)
#Filtering out temperatures and noise
Data_filter_2016_2022 <- Data_join_2016_2022 %>% filter(temp_bb > 1600, cluster != 0)
#Filtering out NA
Data_final_2016_2022 <- na.omit(Data_filter_2016_2022)
Data_final_2016_2022 <- Data_final_2016_2022 %>%st_transform(crs = 4326) %>%as.data.frame()
Data_final_2016_2022 <- Data_final_2016_2022[,-16]
# Data_final_2016_2022 <- Data_final_2016_2022 %>% select("")
#Loading Ken's Data and joining it with Data_final_2016_2022
#filtering out everything after 2016-01-03 inclusive
Ken_2012_2016 <- Ken_2012_2020 %>% filter(!(date>= ("2016-01-03")), !(basin == "WILLISTON"))
ZIP_Spatial <- st_read("../KenData/zips.shp")
View(ZIP_Spatial)
ZIP_valid <- subset(ZIP_Spatial, st_is_valid(ZIP_Spatial))
View(ZIP_valid)
Data_join_2016_2022 <- st_join(Data_join_2016_2022, ZIP_Spatial)
ZIP_Spatial <- st_read("../KenData/zips.shp")
View(ZIP_Spatial)
Data_join_2016_2022 <- st_intersection(Data_join_2016_2022, ZIP_Spatial)
#
# library(dplyr)
# library(ggplot2)
# library(tidyverse)
# library(sf)
# library(raster)
# #------------------------------------------------------IGNORE------------------------------------#
#Data was intially wrong
Counties_Spatial <- st_read("../KenData/counties.shp")
ZIP_Spatial <- st_read("../KenData/zips.shp")
ZIP_valid <- subset(ZIP_Spatial, st_is_valid(ZIP_Spatial))
#
#
# #Loading Data from Jerry
# EF_vnf <- readRDS("../JerryData/ef_vnf/ef-vnf.rds")
# PB_vnf <- readRDS("../JerryData/pb_vnf/pb-vnf.rds")
#
#
# #Converting Coordinates (Long/Lat) in Jerry's Data both EF_vnf and PB_vnf
# EF_vnf_coordinates <- st_as_sf(EF_vnf, coords = c("lon", "lat"), crs = 4326)
# PB_vnf_coordinates <- st_as_sf(PB_vnf, coords = c("lon", "lat"), crs = 4326)
#
#
# #Joining Counties and Jerry's Data (Permian Basin)
# PB_vnf_counties_join <- st_join(PB_vnf_coordinates, Counties_Spatial)
#
# #Joining Counties and Jerry's Data(Eagle Ford)
# EF_vnf_coordinates <- st_join(EF_vnf_coordinates, Counties_Spatial)
#
# #Joining ZIP and Jerry's Data(Permian Basin) with Counties
# PB_final <- st_join(PB_vnf_coordinates, ZIP_valid)
#
# #Joining ZIP and Jerry's Data(Permian Basin) with Counties
# EF_final <- st_join(EF_vnf_coordinates, ZIP_valid)
#
# #Permian Basin
# PB_final<- PB_final %>%st_transform(crs = 4326) %>%
#   mutate(
#     long = st_coordinates(.)[, "X"],
#     lat = st_coordinates(.)[, "Y"]
#   )%>% as.data.frame()
#
# #Drop last column (EF)
# PB_final <- PB_final[, -16]
#
#
# #Eagle Ford
# EF_final<- EF_final %>%st_transform(crs = 4326) %>%
#   mutate(
#     long = st_coordinates(.)[, "X"],
#     lat = st_coordinates(.)[, "Y"]
#   )%>% as.data.frame()
#
# #Drop last column  (EF)
# EF_final <- EF_final[, -21]
#
#
# #Filtering out temperatures
#
# PB_final <- PB_final %>% filter(temp_bb > 1600)
# EF_final <- EF_final %>% filter(temp_bb > 1600)
#
# #Selecting only columns of interest
# PB_final <- PB_final %>% dplyr::select(vnf_id, date, long, lat, zip, state, basin, county)
# EF_final <- EF_final %>% dplyr::select(vnf_id, date, county.y, zip, basin, long, lat, state.y)%>%rename(state = state.y, county = county.y)
#
# #Removing NA
# PB_final <- na.omit(PB_final)
# EF_final <- na.omit(EF_final)
#
#
# #Combining the Data
# Final_Data <- rbind(PB_final, EF_final)
#
# #Writing the file
# write_rds(EF_final, "EF_final.rds")
# write_rds(PB_final, "PB_final.rds")
# write_rds(Final_Data, "VNF_data_final_2012-2022.rds")
#
#------------------------------------------------------UPDATE------------------------------------#
#After receiving Jerry's Updated Data
Data_2016_2022 <- readRDS("../JerryData/flare_full.rds")
Data_2016_2022$long <- Data_2016_2022$vnf_lon
Data_2016_2022$lat <- Data_2016_2022$vnf_lat
Data_coord_2016_2022 <-  st_as_sf(Data_2016_2022, coords = c("long", "lat"), crs = 4326)
Data_join_2016_2022 <- st_join(Data_coord_2016_2022, Counties_Spatial)
Ken_2012_2016 <- Ken_2012_2020 %>% filter(!(date>= ("2016-01-03")), !(basin == "WILLISTON"))
#
# library(dplyr)
# library(ggplot2)
# library(tidyverse)
# library(sf)
# library(raster)
# #------------------------------------------------------IGNORE------------------------------------#
#Data was intially wrong
Counties_Spatial <- st_read("../KenData/counties.shp")
ZIP_Spatial <- st_read("../KenData/zips.shp")
ZIP_valid <- subset(ZIP_Spatial, st_is_valid(ZIP_Spatial))
#
#
# #Loading Data from Jerry
# EF_vnf <- readRDS("../JerryData/ef_vnf/ef-vnf.rds")
# PB_vnf <- readRDS("../JerryData/pb_vnf/pb-vnf.rds")
#
#
# #Converting Coordinates (Long/Lat) in Jerry's Data both EF_vnf and PB_vnf
# EF_vnf_coordinates <- st_as_sf(EF_vnf, coords = c("lon", "lat"), crs = 4326)
# PB_vnf_coordinates <- st_as_sf(PB_vnf, coords = c("lon", "lat"), crs = 4326)
#
#
# #Joining Counties and Jerry's Data (Permian Basin)
# PB_vnf_counties_join <- st_join(PB_vnf_coordinates, Counties_Spatial)
#
# #Joining Counties and Jerry's Data(Eagle Ford)
# EF_vnf_coordinates <- st_join(EF_vnf_coordinates, Counties_Spatial)
#
# #Joining ZIP and Jerry's Data(Permian Basin) with Counties
# PB_final <- st_join(PB_vnf_coordinates, ZIP_valid)
#
# #Joining ZIP and Jerry's Data(Permian Basin) with Counties
# EF_final <- st_join(EF_vnf_coordinates, ZIP_valid)
#
# #Permian Basin
# PB_final<- PB_final %>%st_transform(crs = 4326) %>%
#   mutate(
#     long = st_coordinates(.)[, "X"],
#     lat = st_coordinates(.)[, "Y"]
#   )%>% as.data.frame()
#
# #Drop last column (EF)
# PB_final <- PB_final[, -16]
#
#
# #Eagle Ford
# EF_final<- EF_final %>%st_transform(crs = 4326) %>%
#   mutate(
#     long = st_coordinates(.)[, "X"],
#     lat = st_coordinates(.)[, "Y"]
#   )%>% as.data.frame()
#
# #Drop last column  (EF)
# EF_final <- EF_final[, -21]
#
#
# #Filtering out temperatures
#
# PB_final <- PB_final %>% filter(temp_bb > 1600)
# EF_final <- EF_final %>% filter(temp_bb > 1600)
#
# #Selecting only columns of interest
# PB_final <- PB_final %>% dplyr::select(vnf_id, date, long, lat, zip, state, basin, county)
# EF_final <- EF_final %>% dplyr::select(vnf_id, date, county.y, zip, basin, long, lat, state.y)%>%rename(state = state.y, county = county.y)
#
# #Removing NA
# PB_final <- na.omit(PB_final)
# EF_final <- na.omit(EF_final)
#
#
# #Combining the Data
# Final_Data <- rbind(PB_final, EF_final)
#
# #Writing the file
# write_rds(EF_final, "EF_final.rds")
# write_rds(PB_final, "PB_final.rds")
# write_rds(Final_Data, "VNF_data_final_2012-2022.rds")
#
#------------------------------------------------------UPDATE------------------------------------#
#After receiving Jerry's Updated Data
Data_2016_2022 <- readRDS("../JerryData/flare_full.rds")
Data_2016_2022$long <- Data_2016_2022$vnf_lon
Data_2016_2022$lat <- Data_2016_2022$vnf_lat
Data_coord_2016_2022 <-  st_as_sf(Data_2016_2022, coords = c("long", "lat"), crs = 4326)
Data_join_2016_2022 <- st_join(Data_coord_2016_2022, Counties_Spatial)
#Filtering out temperatures and noise
Data_filter_2016_2022 <- Data_join_2016_2022 %>% filter(temp_bb > 1600, cluster != 0)
#Filtering out NA
Data_final_2016_2022 <- na.omit(Data_filter_2016_2022)
Data_final_2016_2022 <- Data_final_2016_2022 %>%st_transform(crs = 4326) %>%as.data.frame()
Data_final_2016_2022 <- Data_final_2016_2022[,-16]
# Data_final_2016_2022 <- Data_final_2016_2022 %>% select("")
#Loading Ken's Data and joining it with Data_final_2016_2022
#filtering out everything after 2016-01-03 inclusive
Ken_2012_2016 <- Ken_2012_2020 %>% filter(!(date>= ("2016-01-03")), !(basin == "WILLISTON"))
Ken_2012_2020 <- readRDS("../KenData/vnf-2012-2020.rds")
Ken_2012_2016 <- Ken_2012_2020 %>% filter(!(date>= ("2016-01-03")), !(basin == "WILLISTON"))
View(Ken_2012_2016)
Ken_2012_2016$long <- Ken_2012_2016$vnf_lon
Ken_2012_2016_coord <- st_as_sf(Ken_2012_2016, coords = c("lon", "lat"), crs = 4326)
Ken_2012_2016_coord <- st_as_sf(Ken_2012_2016, coords = c("long", "lat"), crs = 4326)
Ken_2012_2016 <- Ken_2012_2020 %>% filter(!(date>= ("2016-01-03")), !(basin == "WILLISTON"))
Ken_2012_2016$lat <- Ken_2012_2016$vnf_lat
Ken_2012_2016$long <- Ken_2012_2016$vnf_lon
Ken_2012_2016_coord <- st_as_sf(Ken_2012_2016, coords = c("long", "lat"), crs = 4326)
View(Ken_2012_2016_coord)
Ken_2012_2016_zip_intersection <- st_intersection(Ken_2012_2016_coord, ZIP_Spatial)
View(Ken_2012_2016_coord)
#Loading Data from Jerry
EF_vnf <- readRDS("../JerryData/ef_vnf/ef-vnf.rds")
PB_vnf <- readRDS("../JerryData/pb_vnf/pb-vnf.rds")
#Converting Coordinates (Long/Lat) in Jerry's Data both EF_vnf and PB_vnf
EF_vnf_coordinates <- st_as_sf(EF_vnf, coords = c("lon", "lat"), crs = 4326)
PB_vnf_coordinates <- st_as_sf(PB_vnf, coords = c("lon", "lat"), crs = 4326)
#Joining Counties and Jerry's Data (Permian Basin)
PB_vnf_counties_join <- st_join(PB_vnf_coordinates, Counties_Spatial)
#Joining Counties and Jerry's Data(Eagle Ford)
EF_vnf_coordinates <- st_join(EF_vnf_coordinates, Counties_Spatial)
#Joining ZIP and Jerry's Data(Permian Basin) with Counties
PB_final <- st_join(PB_vnf_coordinates, ZIP_valid)
#Joining ZIP and Jerry's Data(Permian Basin) with Counties
EF_final <- st_join(EF_vnf_coordinates, ZIP_valid)
View(EF_final)
View(EF_vnf_coordinates)
View(EF_final)
View(EF_vnf_coordinates)
Ken_2012_2016_zip_intersection <- st_join(Ken_2012_2016_coord, ZIP_valid)
View(Ken_2012_2016_zip_intersection)
#
# library(dplyr)
# library(ggplot2)
# library(tidyverse)
# library(sf)
# library(raster)
# #------------------------------------------------------IGNORE------------------------------------#
#Data was intially wrong
Counties_Spatial <- st_read("../KenData/counties.shp")
ZIP_Spatial <- st_read("../KenData/zips.shp")
ZIP_valid <- subset(ZIP_Spatial, st_is_valid(ZIP_Spatial))
#
#
#Loading Data from Jerry
# EF_vnf <- readRDS("../JerryData/ef_vnf/ef-vnf.rds")
# PB_vnf <- readRDS("../JerryData/pb_vnf/pb-vnf.rds")
#
#
# #Converting Coordinates (Long/Lat) in Jerry's Data both EF_vnf and PB_vnf
# EF_vnf_coordinates <- st_as_sf(EF_vnf, coords = c("lon", "lat"), crs = 4326)
# PB_vnf_coordinates <- st_as_sf(PB_vnf, coords = c("lon", "lat"), crs = 4326)
#
#
# #Joining Counties and Jerry's Data (Permian Basin)
# PB_vnf_counties_join <- st_join(PB_vnf_coordinates, Counties_Spatial)
#
# #Joining Counties and Jerry's Data(Eagle Ford)
# EF_vnf_coordinates <- st_join(EF_vnf_coordinates, Counties_Spatial)
#
# #Joining ZIP and Jerry's Data(Permian Basin) with Counties
# PB_final <- st_join(PB_vnf_coordinates, ZIP_valid)
#
# #Joining ZIP and Jerry's Data(Permian Basin) with Counties
# EF_final <- st_join(EF_vnf_coordinates, ZIP_valid)
# #Permian Basin
# PB_final<- PB_final %>%st_transform(crs = 4326) %>%
#   mutate(
#     long = st_coordinates(.)[, "X"],
#     lat = st_coordinates(.)[, "Y"]
#   )%>% as.data.frame()
#
# #Drop last column (EF)
# PB_final <- PB_final[, -16]
#
#
# #Eagle Ford
# EF_final<- EF_final %>%st_transform(crs = 4326) %>%
#   mutate(
#     long = st_coordinates(.)[, "X"],
#     lat = st_coordinates(.)[, "Y"]
#   )%>% as.data.frame()
#
# #Drop last column  (EF)
# EF_final <- EF_final[, -21]
#
#
# #Filtering out temperatures
#
# PB_final <- PB_final %>% filter(temp_bb > 1600)
# EF_final <- EF_final %>% filter(temp_bb > 1600)
#
# #Selecting only columns of interest
# PB_final <- PB_final %>% dplyr::select(vnf_id, date, long, lat, zip, state, basin, county)
# EF_final <- EF_final %>% dplyr::select(vnf_id, date, county.y, zip, basin, long, lat, state.y)%>%rename(state = state.y, county = county.y)
#
# #Removing NA
# PB_final <- na.omit(PB_final)
# EF_final <- na.omit(EF_final)
#
#
# #Combining the Data
# Final_Data <- rbind(PB_final, EF_final)
#
# #Writing the file
# write_rds(EF_final, "EF_final.rds")
# write_rds(PB_final, "PB_final.rds")
# write_rds(Final_Data, "VNF_data_final_2012-2022.rds")
#
#------------------------------------------------------UPDATE------------------------------------#
#After receiving Jerry's Updated Data
Data_2016_2022 <- readRDS("../JerryData/flare_full.rds")
Data_2016_2022$long <- Data_2016_2022$vnf_lon
Data_2016_2022$lat <- Data_2016_2022$vnf_lat
Data_coord_2016_2022 <-  st_as_sf(Data_2016_2022, coords = c("long", "lat"), crs = 4326)
Data_join_2016_2022 <- st_join(Data_coord_2016_2022, Counties_Spatial)
#Filtering out temperatures and noise
Data_filter_2016_2022 <- Data_join_2016_2022 %>% filter(temp_bb > 1600, cluster != 0)
#Filtering out NA
Data_final_2016_2022 <- na.omit(Data_filter_2016_2022)
Data_final_2016_2022 <- Data_final_2016_2022 %>%st_transform(crs = 4326) %>%as.data.frame()
Data_final_2016_2022 <- Data_final_2016_2022[,-16]
# Data_final_2016_2022 <- Data_final_2016_2022 %>% select("")
#Loading Ken's Data and joining it with Data_final_2016_2022
Ken_2012_2020 <- readRDS("../KenData/vnf-2012-2020.rds")
#filtering out everything after 2016-01-03 inclusive
Ken_2012_2016 <- Ken_2012_2020 %>% filter(!(date>= ("2016-01-03")), !(basin == "WILLISTON"))
Ken_2012_2016$lat <- Ken_2012_2016$vnf_lat
Ken_2012_2016$long <- Ken_2012_2016$vnf_lon
Ken_2012_2016_coord <- st_as_sf(Ken_2012_2016, coords = c("long", "lat"), crs = 4326)
Ken_2012_2016_zip_intersection <- st_join(Ken_2012_2016_coord, ZIP_valid) #adding the zip codes spatially joining
View(Ken_2012_2016_zip_intersection)
Ken_2012_2016_non_na <- na.omit(Ken_2012_2016_zip_intersection)
View(Ken_2012_2016_zip_intersection)
View(Ken_2012_2016_non_na)
View(Data_final_2016_2022)
Ken_2012_2016_FINAL <- Ken_2012_2016_non_na %>% select(vnf_id, date, vnf_lon, vnf_lat, stusps)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(sf)
library(raster)
Ken_2012_2016_FINAL <- Ken_2012_2016_non_na %>% select(vnf_id, date, vnf_lon, vnf_lat, stusps)
Ken_2012_2016_non_na <-  as.data.frame(na.omit(Ken_2012_2016_zip_intersection))
Ken_2012_2016_FINAL <- Ken_2012_2016_non_na %>% select(vnf_id, date, vnf_lon, vnf_lat, stusps)
View(Ken_2012_2016_non_na)
Ken_2012_2016_non_na <-  na.omit(Ken_2012_2016_zip_intersection)
Ken_2012_2016_non_na <-  na.omit(Ken_2012_2016_zip_intersection) %>% as.data.frame()
Ken_2012_2016_FINAL <- Ken_2012_2016_non_na %>% select(vnf_id, date, vnf_lon, vnf_lat, stusps)
Ken_2012_2016_FINAL <- Ken_2012_2016_non_na %>% select("vnf_id")
Ken_2012_2016_FINAL <-  select(Ken_2012_2016_non_na, "vnf_id")
Ken_2012_2016_non_na <- Ken_2012_2016_non_na[,-1]
View(Ken_2012_2016_non_na)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(sf)
library(raster)
# #------------------------------------------------------IGNORE------------------------------------#
#Data was intially wrong
Counties_Spatial <- st_read("../KenData/counties.shp")
ZIP_Spatial <- st_read("../KenData/zips.shp")
ZIP_valid <- subset(ZIP_Spatial, st_is_valid(ZIP_Spatial))
#
#
#Loading Data from Jerry
# EF_vnf <- readRDS("../JerryData/ef_vnf/ef-vnf.rds")
# PB_vnf <- readRDS("../JerryData/pb_vnf/pb-vnf.rds")
#
#
# #Converting Coordinates (Long/Lat) in Jerry's Data both EF_vnf and PB_vnf
# EF_vnf_coordinates <- st_as_sf(EF_vnf, coords = c("lon", "lat"), crs = 4326)
# PB_vnf_coordinates <- st_as_sf(PB_vnf, coords = c("lon", "lat"), crs = 4326)
#
#
# #Joining Counties and Jerry's Data (Permian Basin)
# PB_vnf_counties_join <- st_join(PB_vnf_coordinates, Counties_Spatial)
#
# #Joining Counties and Jerry's Data(Eagle Ford)
# EF_vnf_coordinates <- st_join(EF_vnf_coordinates, Counties_Spatial)
#
# #Joining ZIP and Jerry's Data(Permian Basin) with Counties
# PB_final <- st_join(PB_vnf_coordinates, ZIP_valid)
#
# #Joining ZIP and Jerry's Data(Permian Basin) with Counties
# EF_final <- st_join(EF_vnf_coordinates, ZIP_valid)
# #Permian Basin
# PB_final<- PB_final %>%st_transform(crs = 4326) %>%
#   mutate(
#     long = st_coordinates(.)[, "X"],
#     lat = st_coordinates(.)[, "Y"]
#   )%>% as.data.frame()
#
# #Drop last column (EF)
# PB_final <- PB_final[, -16]
#
#
# #Eagle Ford
# EF_final<- EF_final %>%st_transform(crs = 4326) %>%
#   mutate(
#     long = st_coordinates(.)[, "X"],
#     lat = st_coordinates(.)[, "Y"]
#   )%>% as.data.frame()
#
# #Drop last column  (EF)
# EF_final <- EF_final[, -21]
#
#
# #Filtering out temperatures
#
# PB_final <- PB_final %>% filter(temp_bb > 1600)
# EF_final <- EF_final %>% filter(temp_bb > 1600)
#
# #Selecting only columns of interest
# PB_final <- PB_final %>% dplyr::select(vnf_id, date, long, lat, zip, state, basin, county)
# EF_final <- EF_final %>% dplyr::select(vnf_id, date, county.y, zip, basin, long, lat, state.y)%>%rename(state = state.y, county = county.y)
#
# #Removing NA
# PB_final <- na.omit(PB_final)
# EF_final <- na.omit(EF_final)
#
#
# #Combining the Data
# Final_Data <- rbind(PB_final, EF_final)
#
# #Writing the file
# write_rds(EF_final, "EF_final.rds")
# write_rds(PB_final, "PB_final.rds")
# write_rds(Final_Data, "VNF_data_final_2012-2022.rds")
#
#------------------------------------------------------UPDATE------------------------------------#
#After receiving Jerry's Updated Data
Data_2016_2022 <- readRDS("../JerryData/flare_full.rds")
Data_2016_2022$long <- Data_2016_2022$vnf_lon
Data_2016_2022$lat <- Data_2016_2022$vnf_lat
Data_coord_2016_2022 <-  st_as_sf(Data_2016_2022, coords = c("long", "lat"), crs = 4326)
Data_join_2016_2022 <- st_join(Data_coord_2016_2022, Counties_Spatial)
#Filtering out temperatures and noise
Data_filter_2016_2022 <- Data_join_2016_2022 %>% filter(temp_bb > 1600, cluster != 0)
#Filtering out NA
Data_final_2016_2022 <- na.omit(Data_filter_2016_2022)
Data_final_2016_2022 <- Data_final_2016_2022 %>%st_transform(crs = 4326) %>%as.data.frame()
Data_final_2016_2022 <- Data_final_2016_2022[,-16]
# Data_final_2016_2022 <- Data_final_2016_2022 %>% select("")
#Loading Ken's Data and joining it with Data_final_2016_2022
Ken_2012_2020 <- readRDS("../KenData/vnf-2012-2020.rds")
#filtering out everything after 2016-01-03 inclusive
Ken_2012_2016 <- Ken_2012_2020 %>% filter(!(date>= ("2016-01-03")), !(basin == "WILLISTON"))
Ken_2012_2016$lat <- Ken_2012_2016$vnf_lat
Ken_2012_2016$long <- Ken_2012_2016$vnf_lon
Ken_2012_2016_coord <- st_as_sf(Ken_2012_2016, coords = c("long", "lat"), crs = 4326)
Ken_2012_2016_zip_intersection <- st_join(Ken_2012_2016_coord, ZIP_valid) #adding the zip codes spatially joining
#Filtering out NA
Ken_2012_2016_non_na <-  na.omit(Ken_2012_2016_zip_intersection) %>% as.data.frame()
Ken_2012_2016_non_na <- Ken_2012_2016_non_na[,-ncol(Ken_2012_2016_non_na)]
View(Ken_2012_2016_non_na)
setwd("~/Desktop/Current School Stuff/NSERC Shiny Application/ShinyApp")
Data <- readRDS("data/VNF_data_final_2012-2022.rds")
View(Data)
View(Ken_2012_2016)
